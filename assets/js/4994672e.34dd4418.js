"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1281],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,v=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(v,c(c({ref:t},p),{},{components:n})):r.createElement(v,c({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9979:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={},c="Getting started",a={unversionedId:"Svelte/quick_start_svelte",id:"Svelte/quick_start_svelte",title:"Getting started",description:"Installation",source:"@site/docs/05-Svelte/01-quick_start_svelte.md",sourceDirName:"05-Svelte",slug:"/Svelte/quick_start_svelte",permalink:"/docs/docs/Svelte/quick_start_svelte",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05-Svelte/01-quick_start_svelte.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Composables",permalink:"/docs/docs/Vue/composables"},next:{title:"Provider",permalink:"/docs/docs/Svelte/provider"}},l={},s=[{value:"Installation",id:"installation",level:2},{value:"Wrap your app with the Provider",id:"wrap-your-app-with-the-provider",level:2},{value:"Place the components inside your app",id:"place-the-components-inside-your-app",level:2},{value:"Done",id:"done",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting started"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm i -S @connect2ic/core @connect2ic/svelte\n")),(0,o.kt)("h2",{id:"wrap-your-app-with-the-provider"},"Wrap your app with the Provider"),(0,o.kt)("p",null,"Optionally pass in canister definitions as well (as generated by dfx)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<script>\n  import { createClient } from "@connect2ic/core"\n  import { defaultProviders } from "@connect2ic/core/providers"\n  import { Connect2ICProvider } from "@connect2ic/svelte"\n  import "@connect2ic/core/style.css"\n  import * as counter from "canisters/counter"\n\n  const client = createClient({\n    canisters: {\n      counter,\n    },\n    providers: defaultProviders,\n  })\n<\/script>\n\n<Connect2ICProvider client={client}>\n  <App />\n</Connect2ICProvider>\n')),(0,o.kt)("h2",{id:"place-the-components-inside-your-app"},"Place the components inside your app"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<script>\n  import { ConnectButton, ConnectDialog, useConnect } from "@connect2ic/svelte"\n\n  const { isConnected, principal, activeProvider } = useConnect({\n    onConnect: () => {\n      // Signed in\n    },\n    onDisconnect: () => {\n      // Signed out\n    }\n  })\n<\/script>\n\n<div class="my-app">\n  <ConnectButton />\n  <ConnectDialog />\n</div>\n')),(0,o.kt)("h2",{id:"done"},"Done"),(0,o.kt)("p",null,"Explore the remaining sections for further customization & features."))}u.isMDXComponent=!0}}]);